<?php

use Magento\Framework\Escaper;
use Magento\Framework\View\Element\Template;
use Snowdog\Hyva\Checkout\PayU\Block\Script;

/** @var Script $viewModel */
/** @var Escaper $escaper */
/** @var Template $block */
$viewModel = $block->getViewModel();
?>
<script>
    'use strict';

    (function () {
        function initPayUHostedFields() {
            if (typeof PayU == "undefined") {
                console.log('PayU not ready - delaying')
                return setTimeout(initPayUHostedFields, 100);
            }
            let payuSDK;
            try {
                payuSDK = PayU(<?= $escaper->escapeJs($viewModel->getPosId()) ?>, true);
            } catch (e) {
                payuSDK = null
                console.log(e)
                return;
            }
            var secureFormOptions = {
                elementFormNumber: '#payu-card-number',
                elementFormDate: '#payu-card-date',
                elementFormCvv: '#payu-card-cvv',
                config: {
                    cardIcon: true,
                    placeholder: {
                        number: '',
                        cvv: ''
                    },
                    style: {
                        basic: {
                            fontSize: '18px',
                        }
                    },
                    lang: '<?= $escaper->escapeJs($viewModel->getLanguage()) ?>'
                }
            };
            const secureForms = payuSDK.secureForms();
            const secureFormNumber = secureForms.add('number', secureFormOptions.config);
            secureFormNumber.render(secureFormOptions.elementFormNumber);
            const secureFormDate = secureForms.add('date', secureFormOptions.config);
            secureFormDate.render(secureFormOptions.elementFormDate);
            const secureFormCvv = secureForms.add('cvv', secureFormOptions.config);
            secureFormCvv.render(secureFormOptions.elementFormCvv);

            hyvaCheckout.navigation.addTask(() => {
                let component = Magewire.find('checkout.payment.method.payu_gateway_card');
                if (component && component.get('method') === 'c') {
                    const save = document.getElementById('payu_payment-store-card');
                    let method = 'SINGLE';
                    if (save && save.checked === 'checked') {
                        method = 'MULTI';
                    }
                    return payuSDK.tokenize(method).then(
                        function (result) {
                            if (result.status === 'SUCCESS') {
                                return component.token(result.body.token);
                            }
                            let message = [];
                            result.error.messages.forEach(function (error) {
                                message.push(error.message);
                            })
                            return component.failure(message.join('; '));
                        },
                        function (reason) {
                            return component.failure(reason)
                        }
                    );
                }
            })
        }

        window.addEventListener('checkout:step:loaded', async () => {
            var form = document.getElementById('payment_payu_card_form');
            if (!form) {
                return;
            }
            initPayUHostedFields()
        }, {})
    })();
</script>
<script defer src="<?= $viewModel->getSDKUrl() ?>"></script>